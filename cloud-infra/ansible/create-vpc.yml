---
- hosts                       : localhost
  connection                  : local
  gather_facts                : no
  vars_files:
    - "inventory/group_vars/{{ env }}/config.yml"
    #- "inventory/group_vars/{{ env }}/secrets.yml"
  environment:
    AWS_DEFAULT_REGION        : "{{ region }}"
  vars:
    vpc_stack_name            : "{{ project_id }}-vpc"
    peering_stack_name        : "{{ project_id }}-shared-peer"
    bucket_stack_name         : "{{ project_id }}-logging-bucket"
    bucket_policy_stack_name  : "{{ project_id }}-logging-bucket-policy"
    consul_stack_name         : "{{ project_id }}-consul"
    bucket_name               : "{{ project_id }}-{{ region }}-web-access-logs"
  tasks:
    #- debug                   : msg="{{ keyname }}"
    - name                    : "CREATE STACK: {{ vpc_stack_name }} "
      cloudformation:
        stack_name            : "{{ vpc_stack_name }}"
        state                 : "present"
        region                : "{{ region }}"
        template              : "templates/vpc.yml"
        template_parameters:
          VpcCidr             : "{{ vpc_cidr }}"
          PublicSubnet1Cidr   : "{{ public_subnet_1_cidr }}"
          PublicSubnet2Cidr   : "{{ public_subnet_2_cidr }}"
          Environment         : "{{ env }}"
          ProjectId           : "{{ project_id }}"

          BastionAMI          : '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
          KeyName             : 'ansible_tutorial'
          BastionAccessFromCIDR: "{{ bastion_access_cidr }}"


      register: vpc
    - name: show vpc stack outputs
      debug: msg="Created {{ vpc_stack_name }} with these resources {{ vpc.stack_outputs }}"
