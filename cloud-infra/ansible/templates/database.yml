AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates private network segment for Aurora cluster, as well as Aurora
  resources.
Parameters:
  VPC:
    Description: ID of existing VPC
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: must be the name of an existing VPC.
  DbSubnet1Cidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Please specify the CIDR block as n.n.n.n/n
    Default: 10.0.5.0/24
    Description: Database Subnet 1 CIDR
    MaxLength: '18'
    MinLength: '9'
    Type: String
  DbSubnet2Cidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Please specify the CIDR block as n.n.n.n/n
    Default: 10.0.6.0/24
    Description: Database Subnet 2 CIDR
    MaxLength: '18'
    MinLength: '9'
    Type: String
  AvailabilityZone1:
    Description: Availability zones which contain the public/private subnets
    Type: 'AWS::EC2::AvailabilityZone::Name'
    ConstraintDescription: must be the names of availability zones in this region
  AvailabilityZone2:
    Description: Availability zones which contain the public/private subnets
    Type: 'AWS::EC2::AvailabilityZone::Name'
    ConstraintDescription: must be the names of availability zones in this region
  PrivateRouteTable1:
    Description: Private route table for private subnet
    Type: String
  PrivateRouteTable2:
    Description: Private route table for private subnet
    Type: String
  Environment:
    Type: String
    Default: dv
    AllowedValues:
      - dv
      - qa
      - pt
      - st
      - pr
  ProjectId:
    Description: ProjectId = Project + environment
    Type: String
  RdsType:
    Description: RDS instance type
    Type: String
    Default: db.r3.large
    AllowedValues:
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: must be a valid RDS instance type.
  DBName:
    Description: Name of Database instance
    Type: String
    Default: acmeapp
  DBUser:
    Description: Database username
    Type: String
    Default: db_user
  DBPassword:
    Description: Database password
    Type: String
    Default: password
    NoEcho: 'true'
  DBSnapshotIdentifier:
    Description: The RDS snapshot name to restore to the new DB instance.
    Type: String
    Default: ''
  CreateFailoverReplica:
    Description: Create a read replica in another AZ
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
Conditions:
  UseDbSnapshot: !Not
    - !Equals
      - !Ref DBSnapshotIdentifier
      - ''
  CreateReplica: !Equals
    - !Ref CreateFailoverReplica
    - 'true'
Resources:

  DbSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DbSubnet1Cidr
      AvailabilityZone: !Ref AvailabilityZone1
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-subnet-1
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DbSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DbSubnet2Cidr
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-subnet-2
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DbSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref DbSubnet
      RouteTableId: !Ref PrivateRouteTable1
  DbSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref DbSubnet2
      RouteTableId: !Ref PrivateRouteTable2
  DbNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-subnet-acl
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  InboundDbNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref DbNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  OutBoundDbNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref DbNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  DbSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref DbSubnet
      NetworkAclId: !Ref DbNetworkAcl
  DbSubnet2NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref DbSubnet2
      NetworkAclId: !Ref DbNetworkAcl
  DbClientSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Identifies a DB client
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-client-security-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables access on port 3306 for application instances
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref DbClientSecurityGroup
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-security-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DbSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: description
      SubnetIds:
        - !Ref DbSubnet
        - !Ref DbSubnet2
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-subnet-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DBClusterParameterGroup:
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: Database Cluster Parameter Group
      Family: aurora5.6
      Parameters:
        character_set_filesystem: utf8
        character_set_database: utf8
        character_set_server: utf8
        character_set_client: utf8
        character_set_connection: utf8
        character_set_results: utf8
        collation_server: utf8_general_ci
        collation_connection: utf8_general_ci
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-cluster-parameter-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: Database Parameter Group
      Family: aurora5.6
      Parameters:
        max_allowed_packet: '26214400'
        innodb_lock_wait_timeout: '250'
        group_concat_max_len: '20000'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-parameter-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DBCluster:
    Type: 'AWS::RDS::DBCluster'
    DeletionPolicy: Snapshot
    Properties:
      DatabaseName: !If
        - UseDbSnapshot
        - !Ref 'AWS::NoValue'
        - !Ref DBName
      BackupRetentionPeriod: 1
      PreferredBackupWindow: '01:00-02:00'
      PreferredMaintenanceWindow: 'sun:03:00-sun:04:00'
      SnapshotIdentifier: !If
        - UseDbSnapshot
        - !Ref DBSnapshotIdentifier
        - !Ref 'AWS::NoValue'
      Engine: aurora
      EngineVersion: '5.6'
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      AvailabilityZones:
        - !Ref AvailabilityZone1
        - !Ref AvailabilityZone2
      DBSubnetGroupName: !Ref DbSubnetGroup
      MasterUsername: !If
        - UseDbSnapshot
        - !Ref 'AWS::NoValue'
        - !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      VpcSecurityGroupIds:
        - !GetAtt
          - DbSecurityGroup
          - GroupId
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db-cluster
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBSubnetGroupName: !Ref DbSubnetGroup
      AvailabilityZone: !Ref AvailabilityZone1
      Engine: aurora
      DBParameterGroupName: !Ref DBParameterGroup
      DBInstanceClass: !Ref RdsType
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
  ReplicaDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Condition: CreateReplica
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBSubnetGroupName: !Ref DbSubnetGroup
      AvailabilityZone: !Ref AvailabilityZone2
      Engine: aurora
      DBParameterGroupName: !Ref DBParameterGroup
      DBInstanceClass: !Ref RdsType
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectId
              - db
        - Key: Environment
          Value: !Ref Environment
        - Key: Tier
          Value: DB
Outputs:
  DbHost:
    Description: hostname for RDS instance
    Value: !GetAtt
      - DBCluster
      - Endpoint.Address
  DbClientSecurityGroup:
    Value: !Ref DbClientSecurityGroup